[{"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\App.js":"1","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\Palette.js":"2","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PaletteDrawer.js":"3","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\Palette.js":"4","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\generatePalette.js":"5","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PalettesList.js":"6","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\MiniPalette.js":"7","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\PaletteListing.js":"8","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\BackButton.js":"9","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\ColorBox.js":"10","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\index.js":"11","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\reportWebVitals.js":"12","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\seedPalettes.js":"13","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\SinglePalette.js":"14","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\ColorBox.js":"15","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\BackButton.js":"16","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PaletteDialog.js":"17","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\Dialog.js":"18"},{"size":2673,"mtime":1609017712066,"results":"19","hashOfConfig":"20"},{"size":2796,"mtime":1608916721667,"results":"21","hashOfConfig":"20"},{"size":13584,"mtime":1608920034622,"results":"22","hashOfConfig":"20"},{"size":2155,"mtime":1608916721697,"results":"23","hashOfConfig":"20"},{"size":2087,"mtime":1608916721690,"results":"24","hashOfConfig":"20"},{"size":2257,"mtime":1609017982475,"results":"25","hashOfConfig":"20"},{"size":1892,"mtime":1608920330944,"results":"26","hashOfConfig":"20"},{"size":1285,"mtime":1609017000176,"results":"27","hashOfConfig":"20"},{"size":1116,"mtime":1608412111177,"results":"28","hashOfConfig":"20"},{"size":4009,"mtime":1608412111203,"results":"29","hashOfConfig":"20"},{"size":617,"mtime":1607195001414,"results":"30","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"20"},{"size":10526,"mtime":1607193410657,"results":"32","hashOfConfig":"20"},{"size":2916,"mtime":1608412111175,"results":"33","hashOfConfig":"20"},{"size":2217,"mtime":1608412111096,"results":"34","hashOfConfig":"20"},{"size":581,"mtime":1608412111028,"results":"35","hashOfConfig":"20"},{"size":2063,"mtime":1609017443001,"results":"36","hashOfConfig":"20"},{"size":501,"mtime":1609017002372,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w3kekz",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\App.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\Palette.js",[],["84","85"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PaletteDrawer.js",["86","87","88"],"import React from \"react\"\r\nimport clsx from 'clsx';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ChromePicker } from 'react-color'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport {Link} from \"react-router-dom\"\r\nimport seedsPalette from \"../seedPalettes\"\r\n\r\n\r\nconst drawerWidth = 440;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: '#fff',\r\n    color: 'black'\r\n  },\r\n  appBarTitle: {\r\n    marginRight: 'auto'\r\n  },\r\n  appBarForm: {\r\n    display: 'flex'\r\n  },\r\n  appBarFormInput: {\r\n    fontSize: '2rem',\r\n    marginRight: '2.5rem'\r\n  },\r\n  appBarFormButton: {\r\n    padding: \"0 10px\",\r\n    fontSize: \"1rem\"\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  drawerBody: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: \"1rem 3rem\",\r\n    marginTop: \"30%\"\r\n  },\r\n  drawerButtons: {\r\n    alignSelf: \"stretch\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"1.5rem 0 2.5rem 0\",\r\n    \"& > *\": {\r\n        flex: \"1 0 auto\"\r\n    }\r\n  },\r\n  drawerButton: {\r\n    fontSize: \"1.3rem\",\r\n    color: \"white\"\r\n  },\r\n  drawerButtonLg: {\r\n    fontSize: \"1.8rem\",\r\n    marginTop: \"2rem\",\r\n    color: \"white\",\r\n    width: \"100%\"\r\n  },\r\n  drawerPicker: {\r\n    width: \"100% !important\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  colorBoxesWrapper: {\r\n    display: \"flex\",\r\n    height: \"calc(100vh - 64px)\",\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"flex-start\"\r\n  },\r\n  colorBox: {\r\n      flex: \"1 1 20%\",\r\n      height: \"25%\",\r\n      minHeight: \"200px\",\r\n      width: \"20%\",\r\n      maxWidth: \"20%\",\r\n      color: \"white\",\r\n      fontSize: \"1.6rem\",\r\n      position: \"relative\",\r\n      \"& .MuiSvgIcon-root\": {\r\n        position: \"absolute\",\r\n        right: \"1rem\",\r\n        bottom: \"1rem\",\r\n        zIndex: 1,\r\n        width: \"2rem\",\r\n        height: \"2rem\",\r\n        transition: \"transform .3s ease-in-out\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n          transform: \"scale(1.4)\"\r\n        }\r\n      },\r\n      \"@media(max-width: 992px)\": {\r\n        flex: \"1 1 25%\",\r\n        width: \"25%\",\r\n        maxWidth: \"25%\",\r\n      },\r\n      \"@media(max-width: 767px)\": {\r\n        flex: \"1 1 33.33%\",\r\n        width: \"33.33%\",\r\n        maxWidth: \"33.33%\",\r\n      },\r\n      \"@media(max-width: 540px)\": {\r\n        flex: \"1 1 50%\",\r\n        width: \"50%\",\r\n        maxWidth: \"50%\",\r\n      }\r\n  },\r\n  colorBoxName: {\r\n    position: \"absolute\",\r\n    left: \"1rem\",\r\n    bottom: \"1rem\",\r\n    color: 'black',\r\n    zIndex: \"1\",\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"1.3rem\",\r\n    fontWeight: \"600\",\r\n    margin: 0\r\n  },\r\n  formControl: {\r\n    marginTop: \"20px\"\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    \"& > .MuiInput-root\": {\r\n      fontSize: \"1.6rem !important\"\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      background: \"#cccccc\"\r\n    }\r\n  },\r\n  emptyMessage: {\r\n    padding: \"0 10px\", \r\n    width: \"100%\",\r\n    \"& h2\": {\r\n      textAlign: \"center\"\r\n    }\r\n  }\r\n});\r\n\r\nclass PaletteDrawer extends React.Component {\r\n    state = {\r\n        open: false,\r\n        background: '#952F8A',\r\n        colors: [],\r\n        colorName: '',\r\n        paletteName: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n      ValidatorForm.addValidationRule('isUniqueColor', (value) => {\r\n        this.state.colors.every((color) => {\r\n          if(color.colorName !== value) return true\r\n        })\r\n      });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    };\r\n    \r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n\r\n    handleAddColor = () => {\r\n      if(this.state.colors.length < 20){\r\n        const newColor = {\r\n          color: this.state.background, \r\n          name: this.state.colorName\r\n        }\r\n        this.setState((state) => ({\r\n            colors: state.colors.concat(newColor),\r\n            colorName: ''\r\n        }))\r\n      }\r\n    }\r\n\r\n    handleInputChange = (event, name) => {\r\n      console.log(name)\r\n\r\n      this.setState({\r\n        [name]: event.target.value\r\n      })\r\n    }\r\n\r\n    handleDeleteColor = (colorInput) => {\r\n      this.setState((state) => ({\r\n        colors: state.colors.filter(color => color.color !== colorInput.color)\r\n      }))\r\n    }\r\n\r\n    handleClearColors = () => {\r\n      this.setState({\r\n        colors: [],\r\n        colorName: ''\r\n      })\r\n    }\r\n\r\n    handleAddRandomColor = () => {\r\n      const {palettes} = this.props;\r\n      let randomPalette, randomColor;\r\n\r\n      if(palettes.length){\r\n        randomPalette = palettes[this.randomInteger(0, (palettes.length - 1))]\r\n      } else {\r\n        randomPalette = seedsPalette[this.randomInteger(0, (palettes.length - 1))]\r\n      }\r\n\r\n      randomColor = randomPalette.colors[this.randomInteger(0, randomPalette.colors.length - 1)]\r\n      if(this.state.colors.length < 20){\r\n        this.setState((state) => ({\r\n          colors: state.colors.concat({\r\n            name: randomColor.name,\r\n            color: randomColor.color\r\n          })\r\n        }))\r\n      }\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    handleAddPaletteName = () => {\r\n      const newPalette = {\r\n        paletteName: this.state.paletteName,\r\n        colors: this.state.colors,\r\n        emoji: \"🎨\",\r\n        id: this.state.paletteName.split(' ').join('-').toLowerCase()\r\n      }\r\n\r\n      let savedSeedsPalette = this.props.palettes\r\n      let paletteObj = savedSeedsPalette.find(palette => {\r\n        return palette['paletteName'] === this.state.paletteName\r\n      })\r\n\r\n      if(!paletteObj){\r\n        savedSeedsPalette.push(newPalette)\r\n        this.props.savePalette(savedSeedsPalette)\r\n\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    render(){\r\n        const {open} = this.state;\r\n        const {classes, theme} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                {/* <CssBaseline /> */}\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={this.handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Link to='/' className={classes.appBarTitle}><Typography variant=\"h4\"  noWrap>Create your Palette</Typography></Link>\r\n                    <ValidatorForm\r\n                            ref=\"form\"\r\n                            onSubmit={this.handleAddColor}\r\n                            onError={errors => console.log(errors)}\r\n                            className={classes.appBarForm}\r\n                        >\r\n                          <TextValidator\r\n                              label=\"Palette Name\"\r\n                              onChange={e => this.handleInputChange(e, 'paletteName')}\r\n                              name=\"paletteName\"\r\n                              value={this.state.paletteName}\r\n                              className={classes.appBarFormInput}\r\n                              validators={['required']}\r\n                              errorMessages={['this field is required']} \r\n                          />\r\n\r\n                          <Button className={classes.appBarFormButton} variant=\"contained\" color=\"secondary\" onClick={this.handleAddPaletteName}>Add Palette</Button>\r\n                        </ValidatorForm>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                    paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            <ChevronLeftIcon /> \r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    <Divider />\r\n                    <div className={classes.drawerBody}>\r\n                        <Typography variant=\"h3\" noWrap>Design your Palette</Typography>\r\n                        <div className={classes.drawerButtons}> \r\n                            <Button className={classes.drawerButton} variant=\"contained\" color=\"secondary\" onClick={this.handleClearColors}>Clear Palette</Button>\r\n                            <Button className={classes.drawerButton} variant=\"contained\" color=\"primary\" onClick={this.handleAddRandomColor}>Random Color</Button>\r\n                        </div>\r\n                        <ChromePicker className={classes.drawerPicker} onChangeComplete={ this.handleChangeComplete } color={ this.state.background } />\r\n\r\n                        <ValidatorForm\r\n                            ref=\"form\"\r\n                            onSubmit={this.handleAddColor}\r\n                            onError={errors => console.log(errors)}\r\n                            className={classes.formControl}\r\n                        >\r\n                          <TextValidator\r\n                              label=\"Color Name\"\r\n                              onChange={e => this.handleInputChange(e, 'colorName')}\r\n                              name=\"colorName\"\r\n                              value={this.state.colorName}\r\n                              className={classes.formInput}\r\n                              validators={['required', 'isUniqueColor']}\r\n                              errorMessages={['this field is required', 'Color must be unique']}\r\n                          />\r\n\r\n                          <Button className={classes.drawerButtonLg} variant=\"contained\" style={{background: this.state.background }} onClick={this.handleAddColor}>Add Color</Button>\r\n                        </ValidatorForm>\r\n                        \r\n                    </div>\r\n                </Drawer>\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader} />\r\n                    <div className={classes.colorBoxesWrapper}>\r\n                        {\r\n                          this.state.colors.length ? (\r\n                            this.state.colors.map(color => (\r\n                                <div style={{background: color.color}} className={classes.colorBox}>\r\n                                    <p className={classes.colorBoxName}>{color.name}</p>\r\n                                    <DeleteIcon onClick={() => this.handleDeleteColor(color)} />\r\n                                </div>\r\n                            ))\r\n                          ) : \r\n                          <div className={classes.emptyMessage}>\r\n                            <h2>Add colors using the picker in the menu to create a palette</h2>\r\n                          </div>\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(PaletteDrawer)","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\Palette.js",["89"],"\r\n\r\nexport default {\r\n    root: {\r\n        height: \"100vh\",\r\n        overflowX: \"hidden\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\", /* Solution to keep page in proportion to content */\r\n        \"@media(max-width: 991px)\": {\r\n            overflowY: \"scroll\"\r\n        }\r\n    },\r\n    singlePalette: {\r\n        justifyContent: \"space-between\"\r\n    },\r\n    nav: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: \"20px\",\r\n        justifyContent: \"flex-start\",\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        background: \"white\",\r\n        width: \"100%\",\r\n        zIndex: 5,\r\n        height: \"74px\",\r\n        \"@media(max-width: 600px)\": {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            height: \"auto\"\r\n        }\r\n    },\r\n    navLogo: {\r\n        flex: \"0 0 auto\",\r\n        \"@media(max-width: 600px)\": {\r\n            margin: \"5px 0\"\r\n        }\r\n    },\r\n    navSliderWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginLeft: \"50px\",\r\n        flex: \"1 0 auto\",\r\n        marginRight: \"auto\",\r\n        \"@media(max-width: 600px)\": {\r\n            marginLeft: 0,\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    navSlider: {\r\n        marginLeft: \"20px\",\r\n        width: \"100%\",\r\n        maxWidth: \"500px\",\r\n        \"@media(max-width: 850px)\": {\r\n            maxWidth: \"300px\"\r\n        },\r\n        \"@media(max-width: 991px)\": {\r\n            maxWidth: \"350px\"\r\n        }\r\n    },\r\n    navFormat: {\r\n        flex: \"0 0 auto\",\r\n        marginLeft: \"10px\",\r\n        \"@media(max-width: 600px)\": {\r\n            marginLeft: 0\r\n        }\r\n    },\r\n    colors: {\r\n        height: \"calc(100vh - 74px)\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        paddingTop: \"74px\",\r\n        alignContent: \"flex-start\",\r\n        \"@media(max-width: 600px)\": {\r\n            height: \"calc(100vh - 154.875px)\",\r\n            paddingTop: \"154.875px\"\r\n        }\r\n    },\r\n    footer: {\r\n        fontWeight: \"700\",\r\n        background: \"white\",\r\n        padding: \"10px 40px\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\generatePalette.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PalettesList.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\MiniPalette.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\PaletteListing.js",["90"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\BackButton.js",["91"],"export default {\r\n    root: {\r\n        height: props => props.type === 'single' ? \"54%\" : \"25%\",\r\n        width: \"20%\",\r\n        maxWidth: \"20%\",\r\n        flex: \"1 1 20%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        background: \"black\",\r\n        \"@media(max-width: 991px)\": {\r\n            width: \"33.33%\",\r\n            maxWidth: \"33.33%\",\r\n            flex: \"1 1 33.33%\"\r\n        },\r\n        \"@media(max-width: 767px)\": {\r\n            width: \"50%\",\r\n            maxWidth: \"50%\",\r\n            flex: \"1 1 50%\"\r\n        },\r\n        \"@media(max-width: 500px)\": {\r\n            width: \"100%\",\r\n            maxWidth: \"100%\",\r\n            flex: \"1 1 100%\",\r\n            height: \"80px\"\r\n        }\r\n    },\r\n    backBtn: {\r\n        fontSize: \"1.5rem\",\r\n        padding: \"5px 25px\",\r\n        fontWeight: 300,\r\n        border: \"none\",\r\n        background: \"rgba(255,255,255, 0.6)\",\r\n        color: \"white\",\r\n        textTransform: \"uppercase\",\r\n        cursor: \"pointer\",\r\n        textDecoration: \"none\"\r\n    }\r\n}","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\ColorBox.js",["92","93","94"],"import chroma from \"chroma-js\"\r\n\r\nexport default {\r\n    root: {\r\n        height: props => props.type === 'single' ? \"54%\" : \"25%\",\r\n        width: \"20%\",\r\n        maxWidth: \"20%\",\r\n        flex: \"1 1 20%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        \"&:hover $boxBtnCopy\": {\r\n            opacity: 1,\r\n            transform: \"scale(1)\"\r\n        },\r\n        \"@media(max-width: 991px)\": {\r\n            width: \"33.33%\",\r\n            maxWidth: \"33.33%\",\r\n            flex: \"1 1 33.33%\"\r\n        },\r\n        \"@media(max-width: 767px)\": {\r\n            width: \"50%\",\r\n            maxWidth: \"50%\",\r\n            flex: \"1 1 50%\"\r\n        },\r\n        \"@media(max-width: 500px)\": {\r\n            width: \"100%\",\r\n            maxWidth: \"100%\",\r\n            flex: \"1 1 100%\",\r\n            height: \"80px\"\r\n        }\r\n    },\r\n    colorName: {\r\n        position: \"absolute\",\r\n        left: \"1rem\",\r\n        bottom: \"1rem\",\r\n        color: props => chroma(props[props.format]).luminance() <= 0.5 ? 'white' : 'black',\r\n        zIndex: \"1\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"1.3rem\",\r\n        fontWeight: \"600\",\r\n    \r\n    },\r\n    copyContent: { \r\n        position: 'relative'\r\n    },\r\n    boxBtn: {\r\n        border: \"none\",\r\n        background: \"rgba(255,255,255, 0.6)\",\r\n        color: \"white\",\r\n        padding: 0,\r\n        textTransform: \"uppercase\",\r\n        cursor: \"pointer\",\r\n        textDecoration: \"none\"\r\n    },\r\n    boxBtnCopy: {\r\n        fontSize: \"1.5rem\",\r\n        padding: \"5px 25px\",\r\n        fontWeight: 300,\r\n        opacity: 0,\r\n        transition: \"all .3s ease\",\r\n        transform: \"scale(.6)\"\r\n    },\r\n    boxBtnMore: {\r\n        fontSize: \"1.3rem\",\r\n        padding: \"5px\",\r\n        position: \"absolute\",\r\n        right: 0,\r\n        bottom: 0,\r\n        \"&:hover\": {\r\n            transform: \"scale(1.1)\"\r\n        }\r\n    },\r\n    boxColor: {\r\n        background: props => props[props.format]\r\n    },\r\n    boxOverlay: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: props => props[props.format],\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 2,\r\n        transform: \"scale(0.5)\",\r\n        transition:\"opacity .1s ease-in, transform .4s ease-in\",\r\n        height: \"100%\",\r\n        opacity: 0\r\n    },\r\n    showBoxOverlay: {\r\n        transform: \"scale(100)\",\r\n        opacity: 1\r\n    },\r\n    hideBoxOverlay: {\r\n        opacity: 0,\r\n        visibility: \"hidden\"\r\n    },\r\n    messageBox: {\r\n        position: \"fixed\", /* Setting it to fixed will take it out of the whole layout */\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        zIndex: 3,\r\n        justifyContent: \"center\",\r\n        display: \"none\",\r\n        opacity: 0,\r\n        \"& > $boxBtn\": {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: \"4rem\",\r\n            marginBottom: \"15px\",\r\n            textShadow: \"1px 2px black\",\r\n            opacity: 1,\r\n            \"@media(max-width: 767px)\": {\r\n                fontSize: \"2.6rem\"\r\n            }\r\n        },\r\n        \"& span\": {\r\n            fontSize: \"2rem\",\r\n            fontWeight: 300,\r\n            \"@media(max-width: 767px)\": {\r\n                fontSize: \"2rem\"\r\n            }\r\n        }\r\n    },\r\n    showMessageBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        animation: \"$zoomInAnim 1s ease-in-out forwards\",\r\n        animationDelay: \".6s\",\r\n    },\r\n    \"@keyframes zoomInAnim\": {\r\n        \"0%\": {\r\n            opacity: 1,\r\n            transform: \"scale(0)\"\r\n        },\r\n        \"50%\": {\r\n            transform: \"scale(1.4)\"   \r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            transform: \"scale(1)\"\r\n        }\r\n    }\r\n}",["95","96"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\index.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\reportWebVitals.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\seedPalettes.js",["97"],"export default [\r\n    {\r\n      paletteName: \"Material UI Colors\",\r\n      id: \"material-ui-colors\",\r\n      emoji: \"🎨\",\r\n      colors: [\r\n        { name: \"red\", color: \"#F44336\" },\r\n        { name: \"pink\", color: \"#E91E63\" },\r\n        { name: \"purple\", color: \"#9C27B0\" },\r\n        { name: \"deeppurple\", color: \"#673AB7\" },\r\n        { name: \"indigo\", color: \"#3F51B5\" },\r\n        { name: \"blue\", color: \"#2196F3\" },\r\n        { name: \"lightblue\", color: \"#03A9F4\" },\r\n        { name: \"cyan\", color: \"#00BCD4\" },\r\n        { name: \"teal\", color: \"#009688\" },\r\n        { name: \"green\", color: \"#4CAF50\" },\r\n        { name: \"lightgreen\", color: \"#8BC34A\" },\r\n        { name: \"lime\", color: \"#CDDC39\" },\r\n        { name: \"yellow\", color: \"#FFEB3B\" },\r\n        { name: \"amber\", color: \"#FFC107\" },\r\n        { name: \"orange\", color: \"#FF9800\" },\r\n        { name: \"deeporange\", color: \"#FF5722\" },\r\n        { name: \"brown\", color: \"#795548\" },\r\n        { name: \"grey\", color: \"#9E9E9E\" },\r\n        { name: \"bluegrey\", color: \"#607D8B\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors v1\",\r\n      id: \"flat-ui-colors-v1\",\r\n      emoji: \"🤙\",\r\n      colors: [\r\n        { name: \"Turquoise\", color: \"#1abc9c\" },\r\n        { name: \"Emerald\", color: \"#2ecc71\" },\r\n        { name: \"PeterRiver\", color: \"#3498db\" },\r\n        { name: \"Amethyst\", color: \"#9b59b6\" },\r\n        { name: \"WetAsphalt\", color: \"#34495e\" },\r\n        { name: \"GreenSea\", color: \"#16a085\" },\r\n        { name: \"Nephritis\", color: \"#27ae60\" },\r\n        { name: \"BelizeHole\", color: \"#2980b9\" },\r\n        { name: \"Wisteria\", color: \"#8e44ad\" },\r\n        { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n        { name: \"SunFlower\", color: \"#f1c40f\" },\r\n        { name: \"Carrot\", color: \"#e67e22\" },\r\n        { name: \"Alizarin\", color: \"#e74c3c\" },\r\n        { name: \"Clouds\", color: \"#ecf0f1\" },\r\n        { name: \"Concrete\", color: \"#95a5a6\" },\r\n        { name: \"Orange\", color: \"#f39c12\" },\r\n        { name: \"Pumpkin\", color: \"#d35400\" },\r\n        { name: \"Pomegranate\", color: \"#c0392b\" },\r\n        { name: \"Silver\", color: \"#bdc3c7\" },\r\n        { name: \"Asbestos\", color: \"#7f8c8d\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Dutch\",\r\n      id: \"flat-ui-colors-dutch\",\r\n      emoji: \"🇳🇱\",\r\n      colors: [\r\n        { name: \"Sunflower\", color: \"#FFC312\" },\r\n        { name: \"Energos\", color: \"#C4E538\" },\r\n        { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n        { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n        { name: \"BaraRose\", color: \"#ED4C67\" },\r\n        { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n        { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n        { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n        { name: \"LavenderTea\", color: \"#D980FA\" },\r\n        { name: \"VerryBerry\", color: \"#B53471\" },\r\n        { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n        { name: \"PixelatedGrass\", color: \"#009432\" },\r\n        { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n        { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n        { name: \"HollyHock\", color: \"#833471\" },\r\n        { name: \"RedPigment\", color: \"#EA2027\" },\r\n        { name: \"TurkishAqua\", color: \"#006266\" },\r\n        { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n        { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n        { name: \"MagentaPurple\", color: \"#6F1E51\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors American\",\r\n      id: \"flat-ui-colors-american\",\r\n      emoji: \"🇺🇸\",\r\n      colors: [\r\n        { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n        { name: \"FadedPoster\", color: \"#81ecec\" },\r\n        { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n        { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n        { name: \"CityLights\", color: \"#dfe6e9\" },\r\n        { name: \"MintLeaf\", color: \"#00b894\" },\r\n        { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n        { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n        { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n        { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n        { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n        { name: \"FirstDate\", color: \"#fab1a0\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n        { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n        { name: \"AmericanRiver\", color: \"#636e72\" },\r\n        { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n        { name: \"OrangeVille\", color: \"#e17055\" },\r\n        { name: \"Chi-Gong\", color: \"#d63031\" },\r\n        { name: \"PrunusAvium\", color: \"#e84393\" },\r\n        { name: \"DraculaOrchid\", color: \"#2d3436\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Aussie\",\r\n      id: \"flat-ui-colors-aussie\",\r\n      emoji: \"🇦🇺\",\r\n      colors: [\r\n        { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n        { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n        { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n        { name: \"JuneBud\", color: \"#badc58\" },\r\n        { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n        { name: \"Turbo\", color: \"#f9ca24\" },\r\n        { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n        { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n        { name: \"PureApple\", color: \"#6ab04c\" },\r\n        { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n        { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n        { name: \"Heliotrope\", color: \"#e056fd\" },\r\n        { name: \"ExodusFruit\", color: \"#686de0\" },\r\n        { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n        { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n        { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n        { name: \"SteelPink\", color: \"#be2edd\" },\r\n        { name: \"Blurple\", color: \"#4834d4\" },\r\n        { name: \"DeepCove\", color: \"#130f40\" },\r\n        { name: \"WizardGrey\", color: \"#535c68\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors British\",\r\n      id: \"flat-ui-colors-british\",\r\n      emoji: \"🇬🇧\",\r\n      colors: [\r\n        { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n        { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n        { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n        { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n        { name: \"Seabrook\", color: \"#487eb0\" },\r\n        { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n        { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n        { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n        { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n        { name: \"Naval\", color: \"#40739e\" },\r\n        { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n        { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n        { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n        { name: \"MazarineBlue\", color: \"#273c75\" },\r\n        { name: \"BlueNights\", color: \"#353b48\" },\r\n        { name: \"HarleyOrange\", color: \"#c23616\" },\r\n        { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n        { name: \"ChainGangGrey\", color: \"#718093\" },\r\n        { name: \"PicoVoid\", color: \"#192a56\" },\r\n        { name: \"ElectroMagnetic\", color: \"#2f3640\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Spanish\",\r\n      id: \"flat-ui-colors-spanish\",\r\n      emoji: \"🇪🇸\",\r\n      colors: [\r\n        { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n        { name: \"C64Purple\", color: \"#706fd3\" },\r\n        { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n        { name: \"SummerSky\", color: \"#34ace0\" },\r\n        { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n        { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n        { name: \"Liberty\", color: \"#474787\" },\r\n        { name: \"HotStone\", color: \"#aaa69d\" },\r\n        { name: \"DevilBlue\", color: \"#227093\" },\r\n        { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n        { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n        { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n        { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n        { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n        { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n        { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n        { name: \"ChileanFire\", color: \"#cd6133\" },\r\n        { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n        { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n        { name: \"Desert\", color: \"#ccae62\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors Indian\",\r\n      id: \"flat-ui-colors-indian\",\r\n      emoji: \"🇮🇳\",\r\n      colors: [\r\n        { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n        { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n        { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n        { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n        { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n        { name: \"RichGardenia\", color: \"#F97F51\" },\r\n        { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n        { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n        { name: \"Keppel\", color: \"#58B19F\" },\r\n        { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n        { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n        { name: \"BlueBell\", color: \"#3B3B98\" },\r\n        { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n        { name: \"OasisStream\", color: \"#9AECDB\" },\r\n        { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n        { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n        { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n        { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n        { name: \"PineGlade\", color: \"#BDC581\" },\r\n        { name: \"HighlighterLavender\", color: \"#82589F\" }\r\n      ]\r\n    },\r\n    {\r\n      paletteName: \"Flat UI Colors French\",\r\n      id: \"flat-ui-colors-french\",\r\n      emoji: \"🇫🇷\",\r\n      colors: [\r\n        { name: \"FlatFlesh\", color: \"#fad390\" },\r\n        { name: \"MelonMelody\", color: \"#f8c291\" },\r\n        { name: \"Livid\", color: \"#6a89cc\" },\r\n        { name: \"Spray\", color: \"#82ccdd\" },\r\n        { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n        { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n        { name: \"MandarinRed\", color: \"#e55039\" },\r\n        { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n        { name: \"Dupain\", color: \"#60a3bc\" },\r\n        { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n        { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n        { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n        { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n        { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n        { name: \"Waterfall\", color: \"#38ada9\" },\r\n        { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n        { name: \"JalapenoRed\", color: \"#b71540\" },\r\n        { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n        { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n        { name: \"ReefEncounter\", color: \"#079992\" }\r\n      ]\r\n    }\r\n  ];","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\SinglePalette.js",["98"],"import React, { Component } from 'react'\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from \"@material-ui/icons/Close\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nimport ColorBox from \"./ColorBox\"\r\nimport BackButton from \"./BackButton\"\r\nimport styles from \"../styles/Palette.js\"\r\nimport {withStyles} from \"@material-ui/styles\"\r\n\r\nclass SinglePalette extends Component {\r\n    state = {\r\n      format: 'hex',\r\n      snackbarOpen: false\r\n    }\r\n\r\n    \r\n    handleChange = (value) => {\r\n      this.setState({\r\n        levels: value\r\n      })\r\n    }\r\n\r\n    handleSelectChange = (e) => {\r\n      this.setState({\r\n        format: e.target.value,\r\n        snackbarOpen: true\r\n      })\r\n    }\r\n\r\n    handleSnackbarClose = (e, reason) => {\r\n      if(reason === 'clickaway') return;\r\n      this.setState({\r\n        snackbarOpen: false\r\n      })\r\n    }\r\n\r\n    render() {\r\n        const {palettes: {colors}, classes} = this.props;\r\n        console.log(colors)\r\n        const {format} = this.state;\r\n        const colorBoxes = Object.keys(colors).map((color, id) => (\r\n          <ColorBox {...colors[color]} key={id} format={format} type=\"single\" />\r\n        ))\r\n        return (\r\n          <div className={`${classes.root} ${classes.singlePalette}`}>\r\n            <div className={classes.nav}>\r\n              <h3 className={classes.navLogo}>Color Picker</h3>\r\n              <div className={classes.navFormat}>\r\n                <Select onChange={this.handleSelectChange} value={format}>\r\n                  <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n                  <MenuItem value=\"rgb\">RGB - rgb(255, 255, 255)</MenuItem>\r\n                  <MenuItem value=\"rgba\">RGBA - rgba(255, 255, 255, 1.0)</MenuItem>\r\n                </Select>\r\n              </div>\r\n              <Snackbar\r\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\r\n                open={this.state.snackbarOpen}\r\n                autoHideDuration={2000}\r\n                message={<span id=\"message-id\">Format Changed to {format.toUpperCase()}</span>}\r\n                ContentProps={{\r\n                  'aria-describedby': 'message-id'\r\n                }}\r\n                action={[\r\n                  <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                    onClick={this.handleSnackbarClose}\r\n                  >\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                ]}\r\n              />\r\n            </div>\r\n            <div className={classes.colors}>\r\n              {colorBoxes}\r\n              <BackButton type=\"single\"/>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SinglePalette)","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\ColorBox.js",["99"],"import React, { Component } from 'react'\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard\"\r\nimport {Link, withRouter} from \"react-router-dom\"\r\nimport {withStyles} from \"@material-ui/styles\"\r\nimport chroma from \"chroma-js\"\r\nimport styles from \"../styles/ColorBox.js\"\r\n\r\nclass ColorBox extends Component {\r\n   constructor(props){\r\n      super(props);\r\n      this.state = {\r\n         overlayShow: false\r\n      }\r\n   }\r\n\r\n   showOverlay = () => {\r\n      this.setState({\r\n         overlayShow: true\r\n      }, () => {\r\n         this.timer = window.setTimeout(() => {\r\n            this.setState({\r\n               overlayShow: false\r\n            })\r\n         }, 2000)\r\n      })\r\n   }\r\n\r\n   componentWillUnmount(){\r\n      this.setState({\r\n         overlayShow: false\r\n      })\r\n\r\n      window.clearTimeout(this.timer)\r\n   }\r\n\r\n   render() {\r\n      const {format, name, type, classes} = this.props;\r\n      const isDark = chroma(this.props[format]).luminance() <= 0.5\r\n\r\n      return (\r\n         <CopyToClipboard text={this.props[format]} onCopy={() => this.showOverlay()}>\r\n            <div className={`${classes.root} ${classes.boxColor}`}>\r\n               <span className={classes.colorName}>{name}</span>\r\n               <div className={classes.copyContent}>\r\n                  <div className={`${classes.boxOverlay} ${this.state.overlayShow ? classes.showBoxOverlay : classes.hideBoxOverlay} ${classes.boxColor}`}></div>\r\n                  <button className={`${classes.boxBtn} ${classes.boxBtnCopy}`}>Copy</button>\r\n               </div>\r\n               {type !== 'single' && <Link to={`${this.props.location.pathname}/${this.props.id}`} className={`${classes.boxBtn} ${classes.boxBtnMore} ${classes.textColor}`}>MORE</Link>}\r\n               <div className={`${classes.messageBox} ${this.state.overlayShow && classes.showMessageBox} ${classes.boxColor}`}>\r\n                  <p className={`${classes.boxBtn} ${classes.boxBtnCopy}`}>Copied</p>\r\n                  <span className={classes.textColor}>{this.props[format]}</span>\r\n               </div>\r\n            </div>\r\n         </CopyToClipboard>\r\n      )\r\n   }\r\n}\r\n\r\nconst compWithStyles = withStyles(styles)(ColorBox)\r\n\r\nexport default withRouter(compWithStyles)","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\BackButton.js",["100"],"import React from \"react\"\r\nimport styles from \"../styles/BackButton.js\"\r\nimport {withStyles} from \"@material-ui/styles\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass BackButton extends React.Component {\r\n    render(){\r\n        const {classes, type} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                <div className={classes.backBtn} onClick={() => this.props.history.goBack()}>Go back</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst compWithStyle = withStyles(styles)(BackButton)\r\n\r\nexport default withRouter(compWithStyle)","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PaletteDialog.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\Dialog.js",["101"],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":209,"column":41,"nodeType":"112","messageId":"113","endLine":209,"endColumn":43},{"ruleId":"106","severity":1,"message":"114","line":313,"column":25,"nodeType":"108","messageId":"109","endLine":313,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":3,"column":1,"nodeType":"117","endLine":87,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":2,"column":1,"nodeType":"117","endLine":52,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":41,"endColumn":2},{"ruleId":"115","severity":1,"message":"116","line":3,"column":1,"nodeType":"117","endLine":153,"endColumn":2},{"ruleId":"118","severity":1,"message":"119","line":89,"column":9,"nodeType":"120","messageId":"121","endLine":89,"endColumn":15},{"ruleId":"118","severity":1,"message":"122","line":111,"column":9,"nodeType":"120","messageId":"121","endLine":111,"endColumn":16},{"ruleId":"102","replacedBy":"123"},{"ruleId":"104","replacedBy":"124"},{"ruleId":"115","severity":1,"message":"125","line":1,"column":1,"nodeType":"117","endLine":244,"endColumn":5},{"ruleId":"106","severity":1,"message":"126","line":7,"column":9,"nodeType":"108","messageId":"109","endLine":7,"endColumn":19},{"ruleId":"106","severity":1,"message":"127","line":38,"column":13,"nodeType":"108","messageId":"109","endLine":38,"endColumn":19},{"ruleId":"106","severity":1,"message":"128","line":8,"column":25,"nodeType":"108","messageId":"109","endLine":8,"endColumn":29},{"ruleId":"115","severity":1,"message":"116","line":1,"column":1,"nodeType":"117","endLine":24,"endColumn":2},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.every() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'theme' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","Duplicate key 'display'.",["129"],["130"],"Assign array to a variable before exporting as module default","'withRouter' is defined but never used.","'isDark' is assigned a value but never used.","'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]