[{"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\App.js":"1","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\Palette.js":"2","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PaletteDrawer.js":"3","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\Palette.js":"4","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\generatePalette.js":"5","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PalettesList.js":"6","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\MiniPalette.js":"7","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\PaletteListing.js":"8","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\BackButton.js":"9","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\ColorBox.js":"10","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\index.js":"11","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\reportWebVitals.js":"12","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\seedPalettes.js":"13","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\SinglePalette.js":"14","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\ColorBox.js":"15","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\BackButton.js":"16"},{"size":2707,"mtime":1608919313523,"results":"17","hashOfConfig":"18"},{"size":2796,"mtime":1608916721667,"results":"19","hashOfConfig":"18"},{"size":13584,"mtime":1608920034622,"results":"20","hashOfConfig":"18"},{"size":2155,"mtime":1608916721697,"results":"21","hashOfConfig":"18"},{"size":2087,"mtime":1608916721690,"results":"22","hashOfConfig":"18"},{"size":1165,"mtime":1608919559039,"results":"23","hashOfConfig":"18"},{"size":1892,"mtime":1608920330944,"results":"24","hashOfConfig":"18"},{"size":1041,"mtime":1608412111226,"results":"25","hashOfConfig":"18"},{"size":1116,"mtime":1608412111177,"results":"26","hashOfConfig":"18"},{"size":4009,"mtime":1608412111203,"results":"27","hashOfConfig":"18"},{"size":617,"mtime":1607195001414,"results":"28","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"18"},{"size":10526,"mtime":1607193410657,"results":"30","hashOfConfig":"18"},{"size":2916,"mtime":1608412111175,"results":"31","hashOfConfig":"18"},{"size":2217,"mtime":1608412111096,"results":"32","hashOfConfig":"18"},{"size":581,"mtime":1608412111028,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"w3kekz",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\App.js",[],["72","73"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\Palette.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PaletteDrawer.js",["74","75","76"],"import React from \"react\"\r\nimport clsx from 'clsx';\r\nimport {  withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ChromePicker } from 'react-color'\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport {Link} from \"react-router-dom\"\r\nimport seedsPalette from \"../seedPalettes\"\r\n\r\n\r\nconst drawerWidth = 440;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    backgroundColor: '#fff',\r\n    color: 'black'\r\n  },\r\n  appBarTitle: {\r\n    marginRight: 'auto'\r\n  },\r\n  appBarForm: {\r\n    display: 'flex'\r\n  },\r\n  appBarFormInput: {\r\n    fontSize: '2rem',\r\n    marginRight: '2.5rem'\r\n  },\r\n  appBarFormButton: {\r\n    padding: \"0 10px\",\r\n    fontSize: \"1rem\"\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  drawerBody: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    padding: \"1rem 3rem\",\r\n    marginTop: \"30%\"\r\n  },\r\n  drawerButtons: {\r\n    alignSelf: \"stretch\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"1.5rem 0 2.5rem 0\",\r\n    \"& > *\": {\r\n        flex: \"1 0 auto\"\r\n    }\r\n  },\r\n  drawerButton: {\r\n    fontSize: \"1.3rem\",\r\n    color: \"white\"\r\n  },\r\n  drawerButtonLg: {\r\n    fontSize: \"1.8rem\",\r\n    marginTop: \"2rem\",\r\n    color: \"white\",\r\n    width: \"100%\"\r\n  },\r\n  drawerPicker: {\r\n    width: \"100% !important\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0\r\n  },\r\n  colorBoxesWrapper: {\r\n    display: \"flex\",\r\n    height: \"calc(100vh - 64px)\",\r\n    flexWrap: \"wrap\",\r\n    alignContent: \"flex-start\"\r\n  },\r\n  colorBox: {\r\n      flex: \"1 1 20%\",\r\n      height: \"25%\",\r\n      minHeight: \"200px\",\r\n      width: \"20%\",\r\n      maxWidth: \"20%\",\r\n      color: \"white\",\r\n      fontSize: \"1.6rem\",\r\n      position: \"relative\",\r\n      \"& .MuiSvgIcon-root\": {\r\n        position: \"absolute\",\r\n        right: \"1rem\",\r\n        bottom: \"1rem\",\r\n        zIndex: 1,\r\n        width: \"2rem\",\r\n        height: \"2rem\",\r\n        transition: \"transform .3s ease-in-out\",\r\n        cursor: \"pointer\",\r\n        \"&:hover\": {\r\n          transform: \"scale(1.4)\"\r\n        }\r\n      },\r\n      \"@media(max-width: 992px)\": {\r\n        flex: \"1 1 25%\",\r\n        width: \"25%\",\r\n        maxWidth: \"25%\",\r\n      },\r\n      \"@media(max-width: 767px)\": {\r\n        flex: \"1 1 33.33%\",\r\n        width: \"33.33%\",\r\n        maxWidth: \"33.33%\",\r\n      },\r\n      \"@media(max-width: 540px)\": {\r\n        flex: \"1 1 50%\",\r\n        width: \"50%\",\r\n        maxWidth: \"50%\",\r\n      }\r\n  },\r\n  colorBoxName: {\r\n    position: \"absolute\",\r\n    left: \"1rem\",\r\n    bottom: \"1rem\",\r\n    color: 'black',\r\n    zIndex: \"1\",\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"1.3rem\",\r\n    fontWeight: \"600\",\r\n    margin: 0\r\n  },\r\n  formControl: {\r\n    marginTop: \"20px\"\r\n  },\r\n  formInput: {\r\n    width: \"100%\",\r\n    \"& > .MuiInput-root\": {\r\n      fontSize: \"1.6rem !important\"\r\n    },\r\n    \"& .MuiInputBase-input\": {\r\n      background: \"#cccccc\"\r\n    }\r\n  },\r\n  emptyMessage: {\r\n    padding: \"0 10px\", \r\n    width: \"100%\",\r\n    \"& h2\": {\r\n      textAlign: \"center\"\r\n    }\r\n  }\r\n});\r\n\r\nclass PaletteDrawer extends React.Component {\r\n    state = {\r\n        open: false,\r\n        background: '#952F8A',\r\n        colors: [],\r\n        colorName: '',\r\n        paletteName: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n      ValidatorForm.addValidationRule('isUniqueColor', (value) => {\r\n        this.state.colors.every((color) => {\r\n          if(color.colorName !== value) return true\r\n        })\r\n      });\r\n    }\r\n\r\n    handleDrawerOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    };\r\n    \r\n    handleDrawerClose = () => {\r\n        this.setState({\r\n            open: false\r\n        })\r\n    };\r\n\r\n    handleChangeComplete = (color) => {\r\n        this.setState({ background: color.hex });\r\n    };\r\n\r\n    handleAddColor = () => {\r\n      if(this.state.colors.length < 20){\r\n        const newColor = {\r\n          color: this.state.background, \r\n          name: this.state.colorName\r\n        }\r\n        this.setState((state) => ({\r\n            colors: state.colors.concat(newColor),\r\n            colorName: ''\r\n        }))\r\n      }\r\n    }\r\n\r\n    handleInputChange = (event, name) => {\r\n      console.log(name)\r\n\r\n      this.setState({\r\n        [name]: event.target.value\r\n      })\r\n    }\r\n\r\n    handleDeleteColor = (colorInput) => {\r\n      this.setState((state) => ({\r\n        colors: state.colors.filter(color => color.color !== colorInput.color)\r\n      }))\r\n    }\r\n\r\n    handleClearColors = () => {\r\n      this.setState({\r\n        colors: [],\r\n        colorName: ''\r\n      })\r\n    }\r\n\r\n    handleAddRandomColor = () => {\r\n      const {palettes} = this.props;\r\n      let randomPalette, randomColor;\r\n\r\n      if(palettes.length){\r\n        randomPalette = palettes[this.randomInteger(0, (palettes.length - 1))]\r\n      } else {\r\n        randomPalette = seedsPalette[this.randomInteger(0, (palettes.length - 1))]\r\n      }\r\n\r\n      randomColor = randomPalette.colors[this.randomInteger(0, randomPalette.colors.length - 1)]\r\n      if(this.state.colors.length < 20){\r\n        this.setState((state) => ({\r\n          colors: state.colors.concat({\r\n            name: randomColor.name,\r\n            color: randomColor.color\r\n          })\r\n        }))\r\n      }\r\n    }\r\n\r\n    randomInteger = (min, max) => {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    handleAddPaletteName = () => {\r\n      const newPalette = {\r\n        paletteName: this.state.paletteName,\r\n        colors: this.state.colors,\r\n        emoji: \"🎨\",\r\n        id: this.state.paletteName.split(' ').join('-').toLowerCase()\r\n      }\r\n\r\n      let savedSeedsPalette = this.props.palettes\r\n      let paletteObj = savedSeedsPalette.find(palette => {\r\n        return palette['paletteName'] === this.state.paletteName\r\n      })\r\n\r\n      if(!paletteObj){\r\n        savedSeedsPalette.push(newPalette)\r\n        this.props.savePalette(savedSeedsPalette)\r\n\r\n        this.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    render(){\r\n        const {open} = this.state;\r\n        const {classes, theme} = this.props;\r\n        return (\r\n            <div className={classes.root}>\r\n                {/* <CssBaseline /> */}\r\n                <AppBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={this.handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Link to='/' className={classes.appBarTitle}><Typography variant=\"h4\"  noWrap>Create your Palette</Typography></Link>\r\n                    <ValidatorForm\r\n                            ref=\"form\"\r\n                            onSubmit={this.handleAddColor}\r\n                            onError={errors => console.log(errors)}\r\n                            className={classes.appBarForm}\r\n                        >\r\n                          <TextValidator\r\n                              label=\"Palette Name\"\r\n                              onChange={e => this.handleInputChange(e, 'paletteName')}\r\n                              name=\"paletteName\"\r\n                              value={this.state.paletteName}\r\n                              className={classes.appBarFormInput}\r\n                              validators={['required']}\r\n                              errorMessages={['this field is required']} \r\n                          />\r\n\r\n                          <Button className={classes.appBarFormButton} variant=\"contained\" color=\"secondary\" onClick={this.handleAddPaletteName}>Add Palette</Button>\r\n                        </ValidatorForm>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                    paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={this.handleDrawerClose}>\r\n                            <ChevronLeftIcon /> \r\n                        </IconButton>\r\n                    </div>\r\n\r\n                    <Divider />\r\n                    <div className={classes.drawerBody}>\r\n                        <Typography variant=\"h3\" noWrap>Design your Palette</Typography>\r\n                        <div className={classes.drawerButtons}> \r\n                            <Button className={classes.drawerButton} variant=\"contained\" color=\"secondary\" onClick={this.handleClearColors}>Clear Palette</Button>\r\n                            <Button className={classes.drawerButton} variant=\"contained\" color=\"primary\" onClick={this.handleAddRandomColor}>Random Color</Button>\r\n                        </div>\r\n                        <ChromePicker className={classes.drawerPicker} onChangeComplete={ this.handleChangeComplete } color={ this.state.background } />\r\n\r\n                        <ValidatorForm\r\n                            ref=\"form\"\r\n                            onSubmit={this.handleAddColor}\r\n                            onError={errors => console.log(errors)}\r\n                            className={classes.formControl}\r\n                        >\r\n                          <TextValidator\r\n                              label=\"Color Name\"\r\n                              onChange={e => this.handleInputChange(e, 'colorName')}\r\n                              name=\"colorName\"\r\n                              value={this.state.colorName}\r\n                              className={classes.formInput}\r\n                              validators={['required', 'isUniqueColor']}\r\n                              errorMessages={['this field is required', 'Color must be unique']}\r\n                          />\r\n\r\n                          <Button className={classes.drawerButtonLg} variant=\"contained\" style={{background: this.state.background }} onClick={this.handleAddColor}>Add Color</Button>\r\n                        </ValidatorForm>\r\n                        \r\n                    </div>\r\n                </Drawer>\r\n                <main\r\n                    className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                    })}\r\n                >\r\n                    <div className={classes.drawerHeader} />\r\n                    <div className={classes.colorBoxesWrapper}>\r\n                        {\r\n                          this.state.colors.length ? (\r\n                            this.state.colors.map(color => (\r\n                                <div style={{background: color.color}} className={classes.colorBox}>\r\n                                    <p className={classes.colorBoxName}>{color.name}</p>\r\n                                    <DeleteIcon onClick={() => this.handleDeleteColor(color)} />\r\n                                </div>\r\n                            ))\r\n                          ) : \r\n                          <div className={classes.emptyMessage}>\r\n                            <h2>Add colors using the picker in the menu to create a palette</h2>\r\n                          </div>\r\n                        }\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles, {withTheme: true})(PaletteDrawer)","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\Palette.js",["77"],"\r\n\r\nexport default {\r\n    root: {\r\n        height: \"100vh\",\r\n        overflowX: \"hidden\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\", /* Solution to keep page in proportion to content */\r\n        \"@media(max-width: 991px)\": {\r\n            overflowY: \"scroll\"\r\n        }\r\n    },\r\n    singlePalette: {\r\n        justifyContent: \"space-between\"\r\n    },\r\n    nav: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: \"20px\",\r\n        justifyContent: \"flex-start\",\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        background: \"white\",\r\n        width: \"100%\",\r\n        zIndex: 5,\r\n        height: \"74px\",\r\n        \"@media(max-width: 600px)\": {\r\n            flexDirection: \"column\",\r\n            alignItems: \"flex-start\",\r\n            height: \"auto\"\r\n        }\r\n    },\r\n    navLogo: {\r\n        flex: \"0 0 auto\",\r\n        \"@media(max-width: 600px)\": {\r\n            margin: \"5px 0\"\r\n        }\r\n    },\r\n    navSliderWrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginLeft: \"50px\",\r\n        flex: \"1 0 auto\",\r\n        marginRight: \"auto\",\r\n        \"@media(max-width: 600px)\": {\r\n            marginLeft: 0,\r\n            width: \"100%\"\r\n        }\r\n    },\r\n    navSlider: {\r\n        marginLeft: \"20px\",\r\n        width: \"100%\",\r\n        maxWidth: \"500px\",\r\n        \"@media(max-width: 850px)\": {\r\n            maxWidth: \"300px\"\r\n        },\r\n        \"@media(max-width: 991px)\": {\r\n            maxWidth: \"350px\"\r\n        }\r\n    },\r\n    navFormat: {\r\n        flex: \"0 0 auto\",\r\n        marginLeft: \"10px\",\r\n        \"@media(max-width: 600px)\": {\r\n            marginLeft: 0\r\n        }\r\n    },\r\n    colors: {\r\n        height: \"calc(100vh - 74px)\",\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        paddingTop: \"74px\",\r\n        alignContent: \"flex-start\",\r\n        \"@media(max-width: 600px)\": {\r\n            height: \"calc(100vh - 154.875px)\",\r\n            paddingTop: \"154.875px\"\r\n        }\r\n    },\r\n    footer: {\r\n        fontWeight: \"700\",\r\n        background: \"white\",\r\n        padding: \"10px 40px\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\"\r\n    }\r\n}","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\generatePalette.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\PalettesList.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\MiniPalette.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\PaletteListing.js",["78"],"\r\nexport default {\r\n    root: {\r\n        height: \"auto\",\r\n        minHeight: \"100vh\",\r\n        background: \"dodgerblue\"\r\n    },\r\n    container: {\r\n        height: \"100%\"\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        color: \"white\",\r\n        \"& h3\": {\r\n            fontSize: \"3rem\"\r\n        }\r\n    },\r\n    listing: {\r\n        display: \"grid\",\r\n        gridTemplate: \"250px / repeat(3, 1fr)\",\r\n        gridRowGap: \"40px\",\r\n        gridColumnGap: \"20px\",\r\n        gridAutoRows: \"250px\",\r\n        height: \"auto\",\r\n        padding: \"10px 0 50px 0\",\r\n        \"@media(max-width: 767px)\": {\r\n            gridTemplateRows: \"200px\",\r\n            gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\r\n            gridRowGap: \"30px\",\r\n            gridColumnGap: \"15px\",\r\n            gridAutoRows: \"200px\"\r\n        }\r\n    },\r\n    listingItem: {\r\n        textDecoration: \"none\",\r\n        color: \"inherit\",\r\n        width: \"100%\"\r\n    }\r\n}","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\BackButton.js",["79"],"export default {\r\n    root: {\r\n        height: props => props.type === 'single' ? \"54%\" : \"25%\",\r\n        width: \"20%\",\r\n        maxWidth: \"20%\",\r\n        flex: \"1 1 20%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        background: \"black\",\r\n        \"@media(max-width: 991px)\": {\r\n            width: \"33.33%\",\r\n            maxWidth: \"33.33%\",\r\n            flex: \"1 1 33.33%\"\r\n        },\r\n        \"@media(max-width: 767px)\": {\r\n            width: \"50%\",\r\n            maxWidth: \"50%\",\r\n            flex: \"1 1 50%\"\r\n        },\r\n        \"@media(max-width: 500px)\": {\r\n            width: \"100%\",\r\n            maxWidth: \"100%\",\r\n            flex: \"1 1 100%\",\r\n            height: \"80px\"\r\n        }\r\n    },\r\n    backBtn: {\r\n        fontSize: \"1.5rem\",\r\n        padding: \"5px 25px\",\r\n        fontWeight: 300,\r\n        border: \"none\",\r\n        background: \"rgba(255,255,255, 0.6)\",\r\n        color: \"white\",\r\n        textTransform: \"uppercase\",\r\n        cursor: \"pointer\",\r\n        textDecoration: \"none\"\r\n    }\r\n}","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\styles\\ColorBox.js",["80","81","82"],"import chroma from \"chroma-js\"\r\n\r\nexport default {\r\n    root: {\r\n        height: props => props.type === 'single' ? \"54%\" : \"25%\",\r\n        width: \"20%\",\r\n        maxWidth: \"20%\",\r\n        flex: \"1 1 20%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        \"&:hover $boxBtnCopy\": {\r\n            opacity: 1,\r\n            transform: \"scale(1)\"\r\n        },\r\n        \"@media(max-width: 991px)\": {\r\n            width: \"33.33%\",\r\n            maxWidth: \"33.33%\",\r\n            flex: \"1 1 33.33%\"\r\n        },\r\n        \"@media(max-width: 767px)\": {\r\n            width: \"50%\",\r\n            maxWidth: \"50%\",\r\n            flex: \"1 1 50%\"\r\n        },\r\n        \"@media(max-width: 500px)\": {\r\n            width: \"100%\",\r\n            maxWidth: \"100%\",\r\n            flex: \"1 1 100%\",\r\n            height: \"80px\"\r\n        }\r\n    },\r\n    colorName: {\r\n        position: \"absolute\",\r\n        left: \"1rem\",\r\n        bottom: \"1rem\",\r\n        color: props => chroma(props[props.format]).luminance() <= 0.5 ? 'white' : 'black',\r\n        zIndex: \"1\",\r\n        textTransform: \"uppercase\",\r\n        fontSize: \"1.3rem\",\r\n        fontWeight: \"600\",\r\n    \r\n    },\r\n    copyContent: { \r\n        position: 'relative'\r\n    },\r\n    boxBtn: {\r\n        border: \"none\",\r\n        background: \"rgba(255,255,255, 0.6)\",\r\n        color: \"white\",\r\n        padding: 0,\r\n        textTransform: \"uppercase\",\r\n        cursor: \"pointer\",\r\n        textDecoration: \"none\"\r\n    },\r\n    boxBtnCopy: {\r\n        fontSize: \"1.5rem\",\r\n        padding: \"5px 25px\",\r\n        fontWeight: 300,\r\n        opacity: 0,\r\n        transition: \"all .3s ease\",\r\n        transform: \"scale(.6)\"\r\n    },\r\n    boxBtnMore: {\r\n        fontSize: \"1.3rem\",\r\n        padding: \"5px\",\r\n        position: \"absolute\",\r\n        right: 0,\r\n        bottom: 0,\r\n        \"&:hover\": {\r\n            transform: \"scale(1.1)\"\r\n        }\r\n    },\r\n    boxColor: {\r\n        background: props => props[props.format]\r\n    },\r\n    boxOverlay: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: props => props[props.format],\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 2,\r\n        transform: \"scale(0.5)\",\r\n        transition:\"opacity .1s ease-in, transform .4s ease-in\",\r\n        height: \"100%\",\r\n        opacity: 0\r\n    },\r\n    showBoxOverlay: {\r\n        transform: \"scale(100)\",\r\n        opacity: 1\r\n    },\r\n    hideBoxOverlay: {\r\n        opacity: 0,\r\n        visibility: \"hidden\"\r\n    },\r\n    messageBox: {\r\n        position: \"fixed\", /* Setting it to fixed will take it out of the whole layout */\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        zIndex: 3,\r\n        justifyContent: \"center\",\r\n        display: \"none\",\r\n        opacity: 0,\r\n        \"& > $boxBtn\": {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontSize: \"4rem\",\r\n            marginBottom: \"15px\",\r\n            textShadow: \"1px 2px black\",\r\n            opacity: 1,\r\n            \"@media(max-width: 767px)\": {\r\n                fontSize: \"2.6rem\"\r\n            }\r\n        },\r\n        \"& span\": {\r\n            fontSize: \"2rem\",\r\n            fontWeight: 300,\r\n            \"@media(max-width: 767px)\": {\r\n                fontSize: \"2rem\"\r\n            }\r\n        }\r\n    },\r\n    showMessageBox: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        animation: \"$zoomInAnim 1s ease-in-out forwards\",\r\n        animationDelay: \".6s\",\r\n    },\r\n    \"@keyframes zoomInAnim\": {\r\n        \"0%\": {\r\n            opacity: 1,\r\n            transform: \"scale(0)\"\r\n        },\r\n        \"50%\": {\r\n            transform: \"scale(1.4)\"   \r\n        },\r\n        \"100%\": {\r\n            opacity: 1,\r\n            transform: \"scale(1)\"\r\n        }\r\n    }\r\n}","C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\index.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\reportWebVitals.js",[],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\seedPalettes.js",["83"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\SinglePalette.js",["84"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\ColorBox.js",["85"],"C:\\Users\\Family-PC1\\Desktop\\The File\\ReactProjects\\react-foundations\\react_bootcamp\\src\\components\\BackButton.js",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":209,"column":41,"nodeType":"97","messageId":"98","endLine":209,"endColumn":43},{"ruleId":"91","severity":1,"message":"99","line":313,"column":25,"nodeType":"93","messageId":"94","endLine":313,"endColumn":30},{"ruleId":"100","severity":1,"message":"101","line":3,"column":1,"nodeType":"102","endLine":87,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":2,"column":1,"nodeType":"102","endLine":42,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":1,"column":1,"nodeType":"102","endLine":41,"endColumn":2},{"ruleId":"100","severity":1,"message":"101","line":3,"column":1,"nodeType":"102","endLine":153,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":89,"column":9,"nodeType":"105","messageId":"106","endLine":89,"endColumn":15},{"ruleId":"103","severity":1,"message":"107","line":111,"column":9,"nodeType":"105","messageId":"106","endLine":111,"endColumn":16},{"ruleId":"100","severity":1,"message":"108","line":1,"column":1,"nodeType":"102","endLine":244,"endColumn":5},{"ruleId":"91","severity":1,"message":"109","line":7,"column":9,"nodeType":"93","messageId":"94","endLine":7,"endColumn":19},{"ruleId":"91","severity":1,"message":"110","line":38,"column":13,"nodeType":"93","messageId":"94","endLine":38,"endColumn":19},{"ruleId":"91","severity":1,"message":"111","line":8,"column":25,"nodeType":"93","messageId":"94","endLine":8,"endColumn":29},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.every() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'theme' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","Duplicate key 'display'.","Assign array to a variable before exporting as module default","'withRouter' is defined but never used.","'isDark' is assigned a value but never used.","'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]